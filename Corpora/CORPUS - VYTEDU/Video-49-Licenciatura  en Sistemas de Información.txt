Prueba de escritorio
El usuario me ingresa dos números, yo la verdad, ni ustedes ni yo vamos a saber que números va a ingresar, solo sé que el uno va a ser x y el otro va a ser y, ¿sí o no? Y ambos números como nosotros no sabemos si no que son digitalizados, perdón digitados por el usuario entonces yo sé que aquí va a ver un input, aquí va a ver un input, esto quiere decir que va a ser ingresado por teclado y yo capturo ambos valores, el límite inferior y el límite superior  son estas dos variables ¿cierto o falso?.
Así que si yo voy a controlar los primos que hay entre estos dos números, fácilmente yo diría “me la juego por el for” por cuánto? Por i si in range en el rango de x,y más uno, listo ahí está el primero aquí van dos puntos entonces de esto no se olviden nunca, yo como estoy haciendo en la pizarra me puedo olvidar, pero si estuviera en la computadora inmediatamente cuando interprete el programa va a salir error, error, error si? Está claro?.
Aquí está el primer ciclo es así o no es así? Muy bien, excelente, ahora que falta? falta el segundo ciclo porque? este for que está aquí independientemente de la sentencia que va acá, lo que va a hacer es recorrer, vamos a suponer que me ingreso uno y diez, uno, dos, tres, cuatro, cinco, seis, hasta el diez es así o no es así? Es así, pero como yo tengo que evaluar los primos y desgraciadamente me toca el seis yo tengo que preguntar si es divisible para este, divisible entre este, si este es divisible entre este si correcto  este es divisible entre seis, para seis lo que quiere decir es que este seis no es primo. 
¿Qué tengo que hacer ahora? Lo único que se me ocurre es manejar otra variable si? Podría hacer por ejemplo, por acá voy a poner un while entonces porque lo hago así directamente? porque ya viendo que yo tengo que recorrer hacia atrás de nuevo entonces estoy obligado a tener otro ciclo este es un ciclo y este es otro ciclo, pero resulta que el ciclo mayor contiene al ciclo menor y en python yo tengo que ubicar como se llama esto? La identación para indicarle que este ciclo de aquí pertenece al grado de verdadero y falso de acá si está claro? Porque si yo traslado este while de acá no va a formar parte de él sí está claro?.
¿Por qué quiero que forme parte del ciclo superior? porque a mí me interesa por ejemplo controlar si en todo, aquí en este valor seis si es que ese fuera el caso hipotético, yo debería hacer las divisiones del seis entre todos los anteriores estamos? Si estamos? Entonces acá lo que yo voy a hacer es if,if una variable que controle este número puede ser n divisible entre otra variable que está aquí y que la vamos a introducir por acá j si es, perdón vamos a hacerlo con verdadero para que se nos haga más corto, si es diferente de cero entonces que voy a hacer yo?. Print de cuál? Cuál? De n, ya está, ahora aquí me está faltando algo porque yo estoy utilizando una variable j que va a ser mientras sea mayor o igual a uno, mientras sea mayor o igual a uno ¿porque? Porque lo que estamos viendo es que voy a retroceder si se dieron cuenta? Si? este numero uno todavía está en veremos y lo que vamos a hacer aquí es, aquí, acá, lo que voy a hacer acá es que j va a ser igual a j menos uno, ¿Por qué acá? porque aquí?  porque a mí solo me interesa el primo, pero este decremento siempre va a existir porque tengo que seguir recorriendo independientemente de que sea primo o no recuerden identacion quiere decir que este está por verdadero y este está por continuar esta claro?.
No se olviden nunca de esto, ahora este uno está en veremos porque para en el caso particular, yo dije entre uno y diez pero no debe ser para uno si no que debe ser para, para, para, para x, para x, ya está más o menos debe ser así ahora ustedes lo van a incluir dentro del blashbery y vamos a comprobar si es verdad o no?, ¿Qué es lo que yo hice? La prueba de escritorio utilice solamente variables y comencé a razonar sobre esto, y en base a ese razonamiento construí si se acuerdan?.
La construcción de adentro hacia fuera, de adentro hacia fuera, de lo más complejo a lo más sencillo, ¿Cuántas líneas tendría si es que está bien hecho? que  todavía no lo hemos comprobado porque no se hace aquí la prueba ya que la pizarra y el papel aguanta todo, ¿Dónde lo comprobamos? Aquí pero supuestamente en el caso hipotético de que el caso este bien tengo uno, dos, tres, cuatro, cinco, seis y siete líneas, yo vi en los trabajos que ustedes me enviaron veinte líneas fácil, no optimizar recuerden saber comer optimizar este lenguaje Python que ustedes utilizan en el raspberry a sido diseñado para saber programar de una manera óptima si? desde ahora y desde el primer semestre.
