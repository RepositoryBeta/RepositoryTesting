For y while
While y For vamos a empezar con for, porque for aún no lo han visto y por eso me sorprende que lo haya que lo hayan utilizado, pero ¿está bien no? A nivel de avance, a nivel de que ustedes mismos empiecen a descubrir eso está perfecto. Bien el ciclo for, ¿Cómo inicia? Se empieza con una variable de cualquier tipo que yo voy a denominar i, una variable que voy a denominar i y esta variable va a navegar en un rango ¿sí?. For una variable que la denomino i por este ejemplo y que va a navegar en un rango in range, range entre paréntesis ponen desde uno hasta diez sí? esta sería la sintaxis del ciclo repetitivo for, repito el ciclo repetitivo for, tenemos otro ciclo repetitivo.
¿Cómo se llama? El While ¿sí? Vamos a ver las diferencias entre While y For entonces for i in range entre uno y diez, si yo colocara aquí esta sentencia ¿qué es lo que pasaría? Imprimiría desde uno hasta diez menos uno, desde uno hasta diez menos uno, el rango siempre va a variar desde el punto de inicio en este caso uno, un límite n que en este caso es 10, menos uno siempre va hacer así hasta el nueve ¿está claro? entonces si yo ejecuto esta instrucción en Python dentro del blasbery lo que va a pasar es que va a aparecer nueve veces uno, dos, tres, cuatro, cinco, seis. siete. ocho, nueve está claro? ¿Si está claro?.
Veamos las diferencias entonces vamos a ver While, vamos a asumir que tenemos While y vamos a decir que queremos imprimir, recuerden la condición, la condición para que se repita el ciclo lo que vamos a hacer es imprimir de la misma manera una variable i pero a diferencia de for en el While lo que vamos a hacer es a coger la i y la vamos a inicializar con un valor, así hacemos no es cierto? En el for no se necesita, punto número uno ¿sí, inicializo esta variable ¿está claro? y como yo les puse ahí n menos uno acá nosotros le vamos a poner el limite el rango va a hacer mientras i sea menor que diez entonces se ejecuta esto
Sí está claro veamos diferencias una diferencia es que yo tengo que inicializar la variable de control, yo la tengo que inicializar, en el for no la inicializo ¿por qué? porque la sintaxis, el cuerpo del ciclo for me permite inicializarlo donde está el rango entre uno y diez ¿si estamos? si ven la diferencia otra diferencia yo aquí no puedo hacer ninguna otra condición no puedo elevarlo a otra condición no puedo preguntarme por más cosas o llenarlo con otra variable, aquí yo sí puedo hacer otro control o tener una variable de valor n que sea mayor o igual a cien no se en este momento solamente estoy agregando una variable mas pero lo que quiero demostrar es que con el while yo puedo tener más mecanismos de control si está claro? mientras que el for es un ciclo repetitivo que no tiene otro mecanismo de control más que el índice dentro del rango ¿si está claro? quiero saber si quedo claro ¿quedo claro?.
Vamos a hacer un ejercicio, vamos a hacer un ejercicio quiero que hagan en el raspberry utilizando el ciclo for como ya lo hicieron este fin de semana, utilizando el ciclo for imprimir los números pares entre uno y cien imprima los numero pares entre uno y cien ¿está claro? ¿Utilizando cual ciclo? For, imprima los números pares. Veamos, veamos la solución que hicieron ellos que encontraron, está muy bien eh!! haber entonces ¿cómo era el enunciado? Imprimir los números pares, por si acaso acostúmbrense a que adentro del script del programa usted vaya utilizando el numeral recuerde que el número es comentario puede hacerlo así. 

Python no va a tratar de interpretar el programa, no va a tratar de #interpretar# esto si no que será un comentario una línea más, que no será considerada para la ejecución del programa ¿está claro?, pero si sirve para nosotros como un elemento informativo para saber que estamos haciendo está claro? Bien entonces el grupo de Ayovi, el grupo de Ayovi encontró ya una solución hizo un for con la variable i en el rango, range ya saben todo esto en ingles ¿no es cierto? for en español seria para i dentro del rango seria en español, pero la verdad no, no traten de un poco este… interpretar esto si no que tómenlo como lo que es for es un ciclo ¿sí?.
Pero realmente si quisiéramos interpretarlo en español seria para i dentro del rango pero esta variable puede llamarse de cualquier manera yo estoy utilizando i, bien dentro de uno vi que el grupo de Ayovi había puesto, dentro de uno como yo pedí hasta cien dentro de uno y ciento uno ¿Por qué? Porque el ciclo for es el límite menos uno, el límite menos uno esas son las verdaderas interacciones que se van a cumplir ¿está claro?, entonces inmediatamente aquí ya tenemos solucionado el for quiere cien le doy un ciclo de cien ¿está claro?  Perfecto ahora vamos a hacer la primera condición. 
Sí, pero me dice entre uno y cien, y la variable que va a recorrer exactamente la variable que va a recorrer el for es i esta va a ser mi variable de control en el if entonces lo que yo voy a preguntarme es por esta variable, si i modulo dos ¿qué significa modulo dos? Si la división de i entre dos si la división entre i entre dos es igual a cero es decir el residuo de esta división es cero es como si nosotros estuviéramos dividiendo cuatro para dos, dos por dos cuatro de cuatro cero, ese residuo es el que se está preguntando cuando suceda esto y dividamos cada número entre dos ese número es par y es lo que queremos ¿sí o no?
Cuando esta operación se iguala a cero entonces… ¿qué me dijeron que haga? Imprima los pares entre uno y cien, entonces procedo a imprimir print(i). Listo nada más, este sería la solución al problema. Hace un instante habíamos dicho que una de las desventajas del for es que no tenga un control más que el índice o la variable que recorren el ciclo, en este caso es esta variable i que puede ser cualquier otra que le podemos mostrar x o le podemos poner y, cualquiera, pero miren lo que tuve que hacer aquí tuve que hacer un if para controlar que solamente se imprima los pares y esta es otra diferencia con while ¿si está claro? Preguntas hasta ahí?.
¿Se pueden utilizar los dos? Si se pueden utilizar los dos. ¿En qué momentos podría yo utilizar el for o el while? Bueno realmente si tenemos que hacer algo tan sencillo como esto for, pero si tuviéramos que controlar tres variables, cuatro variables, cinco variables porque los programas no son encasillados como cuando nosotros construimos una casa y decimos aquí van a haber catorce ladrillos ¿sí? Y aquí van a ver cinco ladrillos de alto no no no esto es totalmente variable, por lo tanto, yo podría escoger entre un while que tiene más control de variables en un ciclo sencillo como este un for porque es súper rápido, porque solo tienen una variable ¿sí?, no es muy complejo, pero el momento en el que yo tenga que controlar más de dos variables yo me iría siempre por el while ¿sí? Ok ¿preguntas hasta ahí?, un último ejercicio que enviamos para el día, el fin de semana lo vamos a hacer con el ciclo for listo vamos, vamos.
Vamos a hacerle un cambio a este porque acabo de ver algo que también vi este fin de semana en las tareas que me llegaron, ¿se acuerdan de este símbolo (<>)? diferente si la variable que estamos recorriendo en este ciclo dividido para dos el residuo es diferente de cero entonces, he visto en algunos códigos que me han presentado el famoso break y acompañado de este break he visto un else ¿qué haría yo aquí? eso print y muy bien es lo mismo, pero fíjense en lo que ha cambiado, bueno ojo con eso también recordando un poco la indexación esto es muy importante recordando un poco la indexación recuerden que esto es muy importante, si aquí tengo el for la sentencia o las ejecuciones dentro del for deben estar indexadas hacia la derecha y como aquí tengo mi if las sentencias que se cumplan por verdadero deben estar a la derecha y como aquí tengo un else la sentencia que se va a ejecutar por verdadero o falso deben estar a la derecha.
¿Qué hace break? Yo necesite break para poder hacer el anterior? No estamos, haber ya lo van a ver, ustedes van a ver esto a lo largo de la carrera esto se llama optimización de programa, este programa no es óptimo, es más esta pésimo, pero funciona ¿Por qué? Estoy preguntando por una salida falsa y no debería hacerlo, debería serlo por una sentencia verdadera para poder ejecutarse el else, ustedes me preguntan si funciona… pues si funciona, pero está mal, haber una cosa es comer y otra cosa es saber comer ¿si está claro?, lo que estoy tratando de demostrar aquí es que esto no se debería hacer, sentencia break es una sentencia de corte, si han escuchado ¿alguna vez un coffe break?  Tomémonos un tiempo para tomar café, es una secuencia de corte, pero una secuencia de corte apurada, necesaria y apurada, entra por una sentencia de falso rompo y por falso escribo el verdadero.
¿Qué les parece más lógico a ustedes? Que yo pregunte de la siguiente manera y lo dejo así, o que yo pregunte si es par que es lo que trato de hacer, si el residuo entre dos es igual a cero, es como preguntar si es par entonces yo solamente imprimo la variable y ya no optimizo, recuerden saber comer optimizo, ¿Por qué? Vamos a suponer que este programa no sea un programa de cuatro o tres líneas si no que es un programa de dos mil líneas hay que optimizar, y para optimizar nosotros debemos de ser muy inteligentes al saber aplicar las condiciones y la salida por verdadero, cuando ya no nos queda otra opción metemos el false else pero no es necesario aquí porque el ciclo, el ciclo se va a cumplir.
El ciclo con este programa se va a cumplir en apenas tres líneas y no en cinco como teníamos ¿si está claro? Recuerden break solo se utiliza para una salida #abrupta#, rápida, no deseada, es algo que no se utiliza desde hace más de 20 años sin embargo los lenguajes lo incorporan porque nunca se sabe cuándo se lo va a aplicar, pero no es la mejor manera, la mejor manera es seria, esta primero véanlo ustedes cuantifíquenlo, menos líneas en segundo lugar cuando hay menos controles if, elif, else el programa es más rápido, ¿si esa claro? Ahorro de memoria, por eso hago la analogía, una cosa es comer como cuando ustedes comen las empanas que venden afuera y otra cosa es saber comer la comida como le hace su mama en casa, ¿si está claro?. 
Esto es como su papa cuando le dice que lo debe de hacer así porque es la forma de utilizar, pero en cada uno de ustedes quedara cual es la mejor manera para poderlo hacer, ¿está claro? No digo que esta sintácticamente, si no digo que está mal óptimamente ¿está claro? ¿quedo claro? Listo.
